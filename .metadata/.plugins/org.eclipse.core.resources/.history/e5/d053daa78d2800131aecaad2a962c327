package com.visa.json.parser;

import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.NullWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;
import org.apache.log4j.Logger;

public class IOCJacksonParser extends Configured implements Tool {
	
	private Configuration conf;
	private Logger log;
	
	public IOCJacksonParser() {
		this.conf = super.getConf();
		log = Logger.getLogger("mapred.audit.logger");
	}
	
	public static void main(String[] argv) throws Exception {
		if (argv.length < 2) {
			System.err.println("Usage: IOCJacksonParser <inputPath> <outputPath");
			System.exit(1);
		}
		ToolRunner.run(new IOCParser(new Configuration()), argv);
	}
	
	@Override
	public int run(String[] args) {
		if (args.length < 2) {
			System.err.println("Usage: IOCJacksonParser <inputPath> <outputPath");
			System.exit(1);
		}
		for (int i = 0; i < args.length; i++) {
			System.out.println("Arg " + i + " = " + args[i]);
		}
		
		Job job = null;
		try {
			job = Job.getInstance(conf, "JSON Parsing");
		}
		catch (IOException e) {
			e.printStackTrace();
			System.err.println(e);
		}
		
		job.setInputFormatClass(TextInputFormat.class);
		job.setOutputFormatClass(TextOutputFormat.class);
		
		job.setMapperClass(IOCJacksonMapper.class);
		job.setNumReduceTasks(0);
		job.setOutputKeyClass(NullWritable.class);
		job.setOutputValueClass(Text.class);
		job.setJarByClass(IOCJacksonMapper.class);
		
		try {
			FileInputFormat.addInputPath(job, new Path(args[0]));
			FileOutputFormat.setOutputPath(job, new Path(args[1]));
		}
		catch (IOException e) {
			e.printStackTrace();
			System.err.println(e);
		}
		
		int success = 0;
		try {
			success = job.waitForCompletion(true) ? 1 : 0;
		}
		catch (ClassNotFoundException | IOException | InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			log.error(e);
		}
		return success;
	}// run
	
}
